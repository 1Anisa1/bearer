([]*report.Detection) (len=26) {
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(2),
      ColumnNumber: (*int)(18),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=3) "app",
      ObjectUUID: (string) (len=1) "1",
      FieldName: (string) (len=15) "delivery_client",
      FieldUUID: (string) (len=1) "2",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(2),
      ColumnNumber: (*int)(34),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=15) "delivery_client",
      ObjectUUID: (string) (len=1) "2",
      FieldName: (string) (len=4) "call",
      FieldUUID: (string) (len=1) "3",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(7),
      ColumnNumber: (*int)(15),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=8) "messages",
      ObjectUUID: (string) (len=1) "4",
      FieldName: (string) (len=5) "error",
      FieldUUID: (string) (len=1) "5",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(13),
      ColumnNumber: (*int)(18),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=3) "app",
      ObjectUUID: (string) (len=1) "6",
      FieldName: (string) (len=15) "delivery_client",
      FieldUUID: (string) (len=1) "7",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(13),
      ColumnNumber: (*int)(34),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=15) "delivery_client",
      ObjectUUID: (string) (len=1) "7",
      FieldName: (string) (len=4) "call",
      FieldUUID: (string) (len=1) "8",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(15),
      ColumnNumber: (*int)(9),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=3) "app",
      ObjectUUID: (string) (len=1) "6",
      FieldName: (string) (len=7) "api_url",
      FieldUUID: (string) (len=1) "9",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(18),
      ColumnNumber: (*int)(15),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=8) "delivery",
      ObjectUUID: (string) (len=2) "10",
      FieldName: (string) (len=5) "error",
      FieldUUID: (string) (len=2) "11",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(24),
      ColumnNumber: (*int)(18),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=3) "app",
      ObjectUUID: (string) (len=2) "13",
      FieldName: (string) (len=15) "delivery_client",
      FieldUUID: (string) (len=2) "14",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(24),
      ColumnNumber: (*int)(34),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=15) "delivery_client",
      ObjectUUID: (string) (len=2) "14",
      FieldName: (string) (len=4) "call",
      FieldUUID: (string) (len=2) "15",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(26),
      ColumnNumber: (*int)(9),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=3) "app",
      ObjectUUID: (string) (len=2) "13",
      FieldName: (string) (len=7) "api_url",
      FieldUUID: (string) (len=2) "16",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(27),
      ColumnNumber: (*int)(66),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=8) "platform",
      ObjectUUID: (string) (len=2) "19",
      FieldName: (string) (len=3) "foo",
      FieldUUID: (string) (len=2) "20",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(30),
      ColumnNumber: (*int)(15),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=8) "delivery",
      ObjectUUID: (string) (len=2) "22",
      FieldName: (string) (len=5) "error",
      FieldUUID: (string) (len=2) "23",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(36),
      ColumnNumber: (*int)(18),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=3) "app",
      ObjectUUID: (string) (len=2) "25",
      FieldName: (string) (len=15) "delivery_client",
      FieldUUID: (string) (len=2) "26",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(36),
      ColumnNumber: (*int)(34),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=15) "delivery_client",
      ObjectUUID: (string) (len=2) "26",
      FieldName: (string) (len=4) "call",
      FieldUUID: (string) (len=2) "27",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(38),
      ColumnNumber: (*int)(12),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=3) "ENV",
      ObjectUUID: (string) (len=2) "28",
      FieldName: (string) (len=14) "CUSTOMERS_HOST",
      FieldUUID: (string) (len=2) "29",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(38),
      ColumnNumber: (*int)(36),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=3) "ENV",
      ObjectUUID: (string) (len=2) "28",
      FieldName: (string) (len=18) "CUSTOMER_HOST_PORT",
      FieldUUID: (string) (len=2) "30",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(41),
      ColumnNumber: (*int)(15),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=8) "delivery",
      ObjectUUID: (string) (len=2) "31",
      FieldName: (string) (len=5) "error",
      FieldUUID: (string) (len=2) "32",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(47),
      ColumnNumber: (*int)(18),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=3) "app",
      ObjectUUID: (string) (len=2) "34",
      FieldName: (string) (len=15) "delivery_client",
      FieldUUID: (string) (len=2) "35",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(47),
      ColumnNumber: (*int)(34),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=15) "delivery_client",
      ObjectUUID: (string) (len=2) "35",
      FieldName: (string) (len=4) "call",
      FieldUUID: (string) (len=2) "36",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(49),
      ColumnNumber: (*int)(12),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=3) "app",
      ObjectUUID: (string) (len=2) "34",
      FieldName: (string) (len=6) "apiURL",
      FieldUUID: (string) (len=2) "37",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=6) "schema",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(52),
      ColumnNumber: (*int)(15),
      Text: (*string)(<nil>)
    },
    Value: (schema.Schema) {
      ObjectName: (string) (len=8) "delivery",
      ObjectUUID: (string) (len=2) "38",
      FieldName: (string) (len=5) "error",
      FieldUUID: (string) (len=2) "39",
      FieldType: (string) "",
      SimpleFieldType: (string) (len=7) "unknown"
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(4),
      ColumnNumber: (*int)(5),
      Text: (*string)((len=24) "\"/api/delivery-messages\"")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=4) "path",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=1) {
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=22) "/api/delivery-messages"
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(15),
      ColumnNumber: (*int)(5),
      Text: (*string)((len=77) "app.api_url + \"/api/customers\" + customer_id + \"/transactions/\" + platform_id")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=4) "path",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=5) {
          (*values.Unknown)({
            Type: (values.PartType) (len=7) "unknown",
            Parts: ([]values.Part) (len=2) {
              (*values.VariableReference)({
                Type: (values.PartType) (len=18) "variable_reference",
                Identifier: (variables.Identifier) {
                  Type: (variables.Type) (len=8) "variable",
                  Name: (string) (len=3) "app"
                }
              }),
              (*values.VariableReference)({
                Type: (values.PartType) (len=18) "variable_reference",
                Identifier: (variables.Identifier) {
                  Type: (variables.Type) (len=8) "variable",
                  Name: (string) (len=7) "api_url"
                }
              })
            }
          }),
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=14) "/api/customers"
          }),
          (*values.VariableReference)({
            Type: (values.PartType) (len=18) "variable_reference",
            Identifier: (variables.Identifier) {
              Type: (variables.Type) (len=8) "variable",
              Name: (string) (len=11) "customer_id"
            }
          }),
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=14) "/transactions/"
          }),
          (*values.VariableReference)({
            Type: (values.PartType) (len=18) "variable_reference",
            Identifier: (variables.Identifier) {
              Type: (variables.Type) (len=8) "variable",
              Name: (string) (len=11) "platform_id"
            }
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(27),
      ColumnNumber: (*int)(5),
      Text: (*string)((len=67) "\"/api/customers\" + customer.ID + \"/transactions/\" + platform.foo.id")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=4) "path",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=4) {
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=14) "/api/customers"
          }),
          (*values.Unknown)({
            Type: (values.PartType) (len=7) "unknown",
            Parts: ([]values.Part) (len=2) {
              (*values.VariableReference)({
                Type: (values.PartType) (len=18) "variable_reference",
                Identifier: (variables.Identifier) {
                  Type: (variables.Type) (len=8) "variable",
                  Name: (string) (len=8) "customer"
                }
              }),
              (*values.VariableReference)({
                Type: (values.PartType) (len=18) "variable_reference",
                Identifier: (variables.Identifier) {
                  Type: (variables.Type) (len=8) "variable",
                  Name: (string) (len=2) "ID"
                }
              })
            }
          }),
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=14) "/transactions/"
          }),
          (*values.Unknown)({
            Type: (values.PartType) (len=7) "unknown",
            Parts: ([]values.Part) (len=3) {
              (*values.VariableReference)({
                Type: (values.PartType) (len=18) "variable_reference",
                Identifier: (variables.Identifier) {
                  Type: (variables.Type) (len=8) "variable",
                  Name: (string) (len=8) "platform"
                }
              }),
              (*values.VariableReference)({
                Type: (values.PartType) (len=18) "variable_reference",
                Identifier: (variables.Identifier) {
                  Type: (variables.Type) (len=8) "variable",
                  Name: (string) (len=3) "foo"
                }
              }),
              (*values.VariableReference)({
                Type: (values.PartType) (len=18) "variable_reference",
                Identifier: (variables.Identifier) {
                  Type: (variables.Type) (len=8) "variable",
                  Name: (string) (len=2) "id"
                }
              })
            }
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(38),
      ColumnNumber: (*int)(5),
      Text: (*string)((len=112) "f\"{ENV['CUSTOMERS_HOST']}:{ENV['CUSTOMER_HOST_PORT']}/api/delivery-messages?num_page={page}&filters[]={filters}\"")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=4) "path",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=7) {
          (*values.Unknown)({
            Type: (values.PartType) (len=7) "unknown",
            Parts: ([]values.Part) (len=2) {
              (*values.VariableReference)({
                Type: (values.PartType) (len=18) "variable_reference",
                Identifier: (variables.Identifier) {
                  Type: (variables.Type) (len=8) "variable",
                  Name: (string) (len=3) "ENV"
                }
              }),
              (*values.String)({
                Type: (values.PartType) (len=6) "string",
                Value: (string) (len=14) "CUSTOMERS_HOST"
              })
            }
          }),
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=1) ":"
          }),
          (*values.Unknown)({
            Type: (values.PartType) (len=7) "unknown",
            Parts: ([]values.Part) (len=2) {
              (*values.VariableReference)({
                Type: (values.PartType) (len=18) "variable_reference",
                Identifier: (variables.Identifier) {
                  Type: (variables.Type) (len=8) "variable",
                  Name: (string) (len=3) "ENV"
                }
              }),
              (*values.String)({
                Type: (values.PartType) (len=6) "string",
                Value: (string) (len=18) "CUSTOMER_HOST_PORT"
              })
            }
          }),
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=32) "/api/delivery-messages?num_page="
          }),
          (*values.VariableReference)({
            Type: (values.PartType) (len=18) "variable_reference",
            Identifier: (variables.Identifier) {
              Type: (variables.Type) (len=8) "variable",
              Name: (string) (len=4) "page"
            }
          }),
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=11) "&filters[]="
          }),
          (*values.VariableReference)({
            Type: (values.PartType) (len=18) "variable_reference",
            Identifier: (variables.Identifier) {
              Type: (variables.Type) (len=8) "variable",
              Name: (string) (len=7) "filters"
            }
          })
        }
      }),
      VariableName: (string) ""
    }
  }),
  (*report.Detection)({
    Type: (report.DetectionType) (len=9) "interface",
    DetectorType: (detectors.Type) (len=6) "python",
    CommitSHA: (string) "",
    Source: (source.Source) {
      Filename: (string) (len=7) "main.py",
      Language: (string) (len=6) "Python",
      LanguageType: (string) (len=11) "programming",
      LineNumber: (*int)(49),
      ColumnNumber: (*int)(5),
      Text: (*string)((len=76) "f\"{app.apiURL}api/customers/\" + customer_id + \"/transactions/\" + platform_id")
    },
    Value: (interfaces.Interface) {
      Type: (interfaces.Type) (len=4) "path",
      Value: (*values.Value)({
        Parts: ([]values.Part) (len=5) {
          (*values.Unknown)({
            Type: (values.PartType) (len=7) "unknown",
            Parts: ([]values.Part) (len=2) {
              (*values.VariableReference)({
                Type: (values.PartType) (len=18) "variable_reference",
                Identifier: (variables.Identifier) {
                  Type: (variables.Type) (len=8) "variable",
                  Name: (string) (len=3) "app"
                }
              }),
              (*values.VariableReference)({
                Type: (values.PartType) (len=18) "variable_reference",
                Identifier: (variables.Identifier) {
                  Type: (variables.Type) (len=8) "variable",
                  Name: (string) (len=6) "apiURL"
                }
              })
            }
          }),
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=14) "api/customers/"
          }),
          (*values.VariableReference)({
            Type: (values.PartType) (len=18) "variable_reference",
            Identifier: (variables.Identifier) {
              Type: (variables.Type) (len=8) "variable",
              Name: (string) (len=11) "customer_id"
            }
          }),
          (*values.String)({
            Type: (values.PartType) (len=6) "string",
            Value: (string) (len=14) "/transactions/"
          }),
          (*values.VariableReference)({
            Type: (values.PartType) (len=18) "variable_reference",
            Identifier: (variables.Identifier) {
              Type: (variables.Type) (len=8) "variable",
              Name: (string) (len=11) "platform_id"
            }
          })
        }
      }),
      VariableName: (string) ""
    }
  })
}
